openapi: 3.0.0
info:
  title: 'API GSL'
  version: '0.1'
servers:
  -
    url: 'http://localhost:8000'
    description: Homologacao
paths:
  /api/customer:
    get:
      tags:
        - Domain
      description: 'Retorna a lista de usuarios'
      operationId: indexCustomer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
        -
          bearerAuth: []
    post:
      tags:
        - Domain
      description: 'Armazena um novo usuario'
      operationId: storeCustomer
      requestBody:
        description: 'Pet object that needs to be added to the store'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
        -
          bearerAuth: []
  '/api/customer/{id}':
    get:
      tags:
        - Domain
      description: 'Retorna um Cliente por id'
      operationId: showCustomer
      parameters:
        -
          name: id
          in: path
          description: 'id do cliente'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Domain
      description: 'Atualiza um cliente'
      operationId: updateCustomer
      parameters:
        -
          name: id
          in: path
          description: 'id do cliente'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Objeto Cliente a ser atualizado'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
        -
          bearerAuth: []
  /auth/token:
    post:
      tags:
        - Auth
      description: 'Recupera o token de autenticação JWT'
      operationId: authToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /auth/refresh_token:
    post:
      tags:
        - Auth
      description: 'Recupera o token de autenticação JWT'
      operationId: RefreshToken
      requestBody:
        description: 'Open-id connect response'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /auth/logout:
    post:
      tags:
        - Auth
      description: 'Recupera o token de autenticação JWT'
      operationId: AuthLogout
      requestBody:
        description: 'Open-id connect response'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /mic/clientes:
    get:
      tags:
        - InformacoesCadastrais
      description: 'Retorna a lista de clientes cadastrados'
      parameters:
        -
          name: id
          in: query
          description: 'id do cliente'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
    post:
      tags:
        - InformacoesCadastrais
      description: 'Armazena um novo cliente'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema: {  }
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
  '/mic/clientes/{id}':
    get:
      tags:
        - InformacoesCadastrais
      description: 'Retorna um cliente cadastrado'
      parameters:
        -
          name: id
          in: path
          description: 'id do cliente'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
    put:
      tags:
        - InformacoesCadastrais
      description: 'Atualiza um cliente cadastrado'
      parameters:
        -
          name: id
          in: path
          description: 'id do cliente'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
    delete:
      tags:
        - InformacoesCadastrais
      description: 'Remove um cliente cadastrado'
      parameters:
        -
          name: id
          in: path
          description: 'id do cliente'
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
  /pedidos/orders:
    get:
      tags:
        - Order
      description: 'Retorna uma lista de pedidos'
      operationId: b2a2e4a82434a72d2c7abc33c2fc6ad1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {  }
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
    post:
      tags:
        - Order
      description: 'Armazena um novo pedido'
      operationId: storeOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema: {  }
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
  '/pedidos/orders/{id}':
    get:
      tags:
        - Order
      description: 'Retorna um pedido por id'
      operationId: 2e7c695e6a001416756c11d923b98af6
      parameters:
        -
          name: id
          in: path
          description: 'id do pedido'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
  /api/suppliers:
    get:
      tags:
        - Domain
      description: 'Retorna a lista de usuarios'
      operationId: 6207e57dd1dcd1d6e7125fe144607196
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
    post:
      tags:
        - Domain
      description: 'Armazena um novo fornecedor'
      operationId: storeSupplier
      requestBody:
        description: 'Pet object that needs to be added to the store'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
  '/api/suppliers/{id}':
    get:
      tags:
        - Domain
      description: 'Retorna um Fornecedor por id'
      operationId: 7fc447855461518ce36bdeb5a44310a3
      parameters:
        -
          name: id
          in: path
          description: 'id do fornecedor'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
    delete:
      tags:
        - Domain
      description: 'Exclui um fornecedor'
      operationId: deleteSupplier
      parameters:
        -
          name: id
          in: path
          description: 'id do fornecedor'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema: {  }
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Domain
      description: 'Atualiza um fornecedor'
      operationId: updateSupplier
      parameters:
        -
          name: id
          in: path
          description: 'id do fornecedor'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Objeto Forncedor a ser atualizado'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '422':
          description: 'Missing Data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
        -
          bearerAuth: []
components:
  schemas:
    NewCustomer:
      required:
        - name
    Customer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Customer'
        -
          required:
            - name
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            email:
              type: string
              format: email
            birth_date:
              type: string
              format: date-time
            cpf:
              type: string
          type: object
    Adress:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Adress'
        -
          required:
            - name
          properties:
            zipcode:
              type: integer
              format: int64
            street:
              type: string
            number:
              type: integer
              format: int64
            city:
              type: string
            neighborhood:
              type: string
            state:
              type: string
            country:
              type: string
            active:
              type: boolean
          type: object
    Supplier:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Supplier'
        -
          required:
            - name
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            email:
              type: string
          type: object
    Order:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Order'
        -
          required:
            - customer
            - origin_adress
          properties:
            codigo_rastreamento:
              type: string
            customer:
              $ref: '#/components/schemas/Customer'
            origin_adress:
              $ref: '#/components/schemas/Adress'
            destination_adress:
              $ref: '#/components/schemas/Adress'
            supplier:
              $ref: '#/components/schemas/Supplier'
            unity:
              type: string
            weight:
              type: number
            height:
              type: number
            width:
              type: number
            length:
              type: number
          type: object
    ErrorModel:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ErrorModel'
        -
          properties:
            message:
              type: string
            status:
              type: number
          type: object
    AuthToken:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AuthToken'
        -
          required:
            - email
            - password
          properties:
            email:
              type: string
              format: email
            password:
              type: string
          type: object
    RefreshTokenRequest:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/RefreshTokenRequest'
        -
          required:
            - refresh_token
          properties:
            refresh_token:
              type: string
          type: object
    AuthTokenResponse:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AuthTokenResponse'
        -
          required:
            - email
            - password
          properties:
            access_token:
              type: string
            expires_in:
              type: string
            refresh_expires_in:
              type: string
            refresh_token:
              type: string
            token_type:
              type: string
          type: object
  securitySchemes:
    bearerAuth:
      type: http
      name: Authorization
      in: header
      bearerFormat: JWT
      scheme: bearer
